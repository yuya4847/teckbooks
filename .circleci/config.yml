version: 2
jobs:
  test:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: Dockerコンテナのビルド
          command: docker-compose -f docker-compose.yml build
      - run:
          name: Dockerコンテナの起動
          command: docker-compose -f docker-compose.yml up -d
      - run:
          name: db接続を待機
          command: sleep 10
      - run:
          name: データの権限のセットsアップ
          command: docker-compose exec db mysql -u root -pdb_root_password -e"$(cat db/grant_user.sql)"
      - run:
          name: データベースの削除
          command: docker-compose -f docker-compose.yml run app rails db:drop
      - run:
          name: データベースのセットアップ
          command: docker-compose -f docker-compose.yml run app rails db:create
      - run:
          name: データベースのマイグレート
          command: docker-compose -f docker-compose.yml run app rails db:migrate
      - run:
          name: webpackerの実行
          command: docker-compose -f docker-compose.yml run app rails webpacker:install
      - run:
          name: Rubocopの実行
          command: docker-compose -f docker-compose.yml run app bundle exec rubocop
      - run:
          name: データーベースの環境設定
          command: docker-compose -f docker-compose.yml run app rails db:environment:set RAILS_ENV=test
      - run:
          name: Rspecの実行
          command: docker-compose -f docker-compose.yml run app bundle exec rspec
      - run:
          name: Dockerコンテナの停止するsdaaaaaa
          command: docker-compose -f docker-compose.yml down

  deploy:
    machine:
        image: circleci/classic:edge
    steps:
        - checkout
        - add_ssh_keys:
            fingerprints:
              - 4d:2d:85:da:a0:a4:72:e2:59:7d:2b:b2:55:01:b4:31
        - run: ssh ${USER_NAME}@${HOST_NAME} 'cd teckbooks && git pull origin task-1'


workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - task-1
